@using ONTO.Localization

@model ONTO.ViewModels.AdminViewModels.ManageUserRolesViewModel

<h2>ManageUserRole</h2>
<hr />


<!--Add user to Role-->
@using (Ajax.BeginForm("AddUserToRole"
                        , routeValues: null
                        , htmlAttributes: new { @class = "form-horizontal profile-form-right-border" }
                        , ajaxOptions: new AjaxOptions
                        {
                            HttpMethod = "POST"
                                                        ,
                            OnSuccess = "AddCookieForNotificationBar('lightgreen', data);"
                            ,
                            OnFailure = "AddCookieForNotificationBar('orangered', data);"

                        }))
{
    <h3 class="form-group">Add user to role</h3>

    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.UserName)
        <div>
            @Html.TextBoxFor(m => m.UserName, htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RoleName)
        <div>
            @Html.TextBoxFor(m => m.RoleName, htmlAttributes: new { @class = "form-control", @placeholder = Model.RoleName })
        </div>
    </div>

    <div class="form-group">
        <div>
            <input type="submit" value=@Labels.SaveButtonLabel class="btn btn-success" />
        </div>
    </div>
}


<!--Remove user to Role-->
@using (Ajax.BeginForm("RemoveUserFromRole"
                        , routeValues: null
                        , htmlAttributes: new { @class = "form-horizontal profile-form-right-border" }
                        , ajaxOptions: new AjaxOptions
                        {
                            HttpMethod = "POST"
                                                        ,
                            OnSuccess = "AddCookieForNotificationBar('lightgreen', data);"
                            ,
                            OnFailure = "AddCookieForNotificationBar('orangered', data);"
                        }))
{
    <h3 class="form-group">Remove user from role</h3>

    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.UserName)
        <div>
            @Html.TextBoxFor(m => m.UserName, htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RoleName)
        <div>
            @Html.TextBoxFor(m => m.RoleName, htmlAttributes: new { @class = "form-control", @placeholder = Model.RoleName })
        </div>
    </div>

    <div class="form-group">
        <div>
            <input type="submit" value=@Labels.SaveButtonLabel class="btn btn-success" />
        </div>
    </div>
}


<!--List users in role-->
